Investigating Associative Classification for Software Fault Prediction: An Experimental Perspective. It is a recurrent finding that software development is often troubled by considerable delays as well as budget overruns and several solutions have been proposed in answer to this observation, software fault prediction being a prime example. Drawing upon machine learning techniques, software fault prediction tries to identify upfront software modules that are most likely to contain faults, thereby streamlining testing efforts and improving overall software quality. When deploying fault prediction models in a production environment, both prediction performance and model comprehensibility are typically taken into consideration, although the latter is commonly overlooked in the academic literature. Many classication methods have been suggested to conduct fault prediction; yet associative classication methods remain uninvestigated in this context. This paper proposes an associative classication (AC)-based fault prediction method, building upon the CBA2 algorithm. In an empirical comparison on 12 real-world
datasets, the AC-based classier is shown to achieve a predictive performance competitive to those of models induced by five other tree/rule-based classication techniques. In addition, our findings also highlight the comprehensibility of the AC-based models, while achieving similar prediction performance. Furthermore, the possibilities of cross project prediction are investigated, strengthening earlier findings on the feasibility of such approach when insufficient data on the target project is available. 
